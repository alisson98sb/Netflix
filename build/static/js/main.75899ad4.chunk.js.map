{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75899ad4.chunk.js","sourcesContent":["const API_KEY = 'a7a3249c07c5df578b9c23ce940153bb';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n/*\n    - ORIGINAIS NETFLIX\n    - RECOMENDADOS ( TREADING )\n    - EM ALTA (TOP RATED)\n    - AÇAO\n    - COMÉDIA\n    - TERROR\n    - ROMANCE \n    - DOCUMENTÁRIOS\n*/\n\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\n\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais da Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para Você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em Alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'commedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            }\n        ]\n    },\n    getMovieInfo: async (movieId, type) => {\n\n        let info = {};\n\n        if(movieId){\n            switch(type){\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                \n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break;\n            }\n        }\n\n        return info;\n    }\n}","import React, { useState } from 'react'; \nimport NavigateBeforeIcon from  '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from  '@material-ui/icons/NavigateNext';\n\nimport './MovieRow.css';\n\nexport default ({title, items}) => {\n    const [scrollX, setScrollX] = useState(0)\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2 );\n        if(x > 0){\n            x = 0;\n        }\n        setScrollX(x);\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2 );\n        let listW = items.results.length * 150;\n        if((window.innerWidth - listW) > x ){\n            x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x);\n    }\n    \n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <NavigateBeforeIcon style={{fontSize: 50}} />\n            </div>\n\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <NavigateNextIcon style={{fontSize: 50}} />\n            </div>\n\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow--list\" style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 150\n\n                }}>\n                    {items.results.length > 0 && items.results.map((item, key)=>(\n                        <div key={key} className=\"movieRow--item\">\n                            <img \n                            src={`http://image.tmdb.org/t/p/w300${item.poster_path}`} \n                            alt={item.original_title} \n                            />\n                        </div>\n                        ) )\n                    }\n                </div>\n            </div>\n        </div>\n    ) \n}","import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n    let firstDate = new Date(item.first_air_date);\n\n    let genres = [];\n    for(let i in item.genres) {\n        genres.push( item.genres[i].name );\n    }\n\n    let description = item.overview;\n    if(description.length > 200) {\n        description = description.substring(0 ,200)+'...';\n    }\n\n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path })`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured--description\">{description}</div>\n                    <div className=\"featured--buttons\">\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶  Assistir</a>\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n                    </div>\n                    <div className=\"featurad--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react';\nimport './Header.css';\n\nexport default ({black}) =>{\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">  \n                <a href=\"/\">\n                    <img src=\"kisspng-netflix-streaming-media-television-show-logo-netflix-logo-5b35b03bb4e9d0.753613021530245179741.png\" alt=\"Netflix \"></img>\n                </a>\n            </div>\n\n            <div className=\"header--user\">  \n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"></img>\n                </a>\n            </div>\n        </header>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\n\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\n\nexport default () => {\n\n  const [ movieList, setMovieList ] = useState([]);\n  const [ featuredData, setFeaturedData ] = useState(null);\n  const [ blackHeader, setBlackHeader ] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista total de filmes\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando o filme em destaque (featured)\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length-1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 20) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll' , scrollListener);\n    }\n  },[])\n\n\n  return (\n    <div className=\"page\">\n      <Header black={ blackHeader }/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (          \n            <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> pela B7Web <br/>\n        Direitos de imagem para Netflix <br/>\n        Dados capturados do site Themoviedb.org <br/>\n        Alisson Santana Barbosa \n      </footer>\n\n      {movieList <= 0 &&\n        <div className=\"loading\">\n            <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\" alt=\"Carregando\"></img>\n        </div>\n      }\n\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}